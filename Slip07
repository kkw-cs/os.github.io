//WT
//Slip7.xml
<?xml version="1.0"?>
<MovieInfo>
<Movie id="01">
<MovieTitle>Lucky the Racer</MovieTitle>
<ActorName>Allu Arjun</ActorName>
<ReleaseYear>2014</ReleaseYear>
</Movie>
<Movie id="02">
<MovieTitle>Sita Ramam</MovieTitle>
<ActorName>Dulquer Salmaan</ActorName>
<ReleaseYear>2022</ReleaseYear>
</Movie>
<Movie id="03">
<MovieTitle>AAa</MovieTitle>
<ActorName>Nithiin</ActorName>
<ReleaseYear>2016</ReleaseYear>
</Movie>
<Movie id="04">
<MovieTitle>Theri</MovieTitle>
<ActorName>Vijay Kumar</ActorName>
<ReleaseYear>2016</ReleaseYear>
</Movie>
<Movie id="05">
<MovieTitle>Yevadu</MovieTitle>
<ActorName>Ram charan</ActorName>
<ReleaseYear>2014</ReleaseYear>
</Movie>
</MovieInfo>


<?php
$dom=new DOMDocument();
$dom->load('Slip7.xml');
echo "<b>Movie Title</b><br>";
$t=$dom->getElementsByTagName("MovieTitle");
foreach($t as $node){
    print $node->textContent;
    echo "<br>";
}
echo "<b>Actor Name</b><br>";
$t1=$dom->getElementsByTagName("ActorName");
foreach($t1 as $node){
    print $node->textContent;
    echo "<br>";
}
echo "<b>Release Date</b><br>";
$t2=$dom->getElementsByTagName("ReleaseDate");
foreach($t2 as $node){
    print $node->textContent;
    echo "<br>";
}
?>
// $movies=$dom->getElementsByTagName("MovieInfo");
// foreach($movies as $movie){
//     echo "MovieTitle:".$movie->getElementsByTagName('MovieTitle')[0]->textContent.",";
//     echo "ActorName:".$movie->getElementsByTagName('ActorName')[0]->textContent."<br>";
// }
    
//DA    
import io
import pandas as pd
df = pd.read_csv('D:/Clg/TYBCS Sem 6/DA/Market_Basket.csv')
print(df.head(10))
transactions = []
transactions = []
for i in range(0, len(df)):
#for i in range(0, 7501):
        transactions.append([str(df.values[i,j]) for j in range(0, 20)])
from apyori import apriori
rules = apriori(transactions, min_support = 0.003, min_confidence = 0.2, min_lift = 3, min_length = 2)
# Visualising the results
results = list(rules)
association_rules(frequent_items, metric="confidence", min_threshold=0.5,support_only=False)
plt.scatter(rules['support'], rules['confidence'], alpha=0.5)
plt.xlabel('support')
plt.ylabel('confidence')
plt.title('Support vs Confidence')
plt.show()
