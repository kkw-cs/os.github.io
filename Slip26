//Q1
#include<stdio.h>

int main()
{
	int allocation[100][100],max[100][100],need[100][100],i,j,k,y,pr,rs,cnt;
	int allocated[100],available[100],safe_state[100];
	
	printf("\n Enter No. of Processes : ");
	scanf("%d",&pr);
	
	printf("\n Enter No. of Resources : ");
	scanf("%d",&rs);
	
	printf("\n Enter Allocation Data : ");
	for(i=0;i<pr;i++)
	{
		printf("\n P%d :",i);
		for(j=0;j<rs;j++)
		{
			printf("\n %c : ",65+j);
			scanf("%d",&allocation[i][j]);
		}
	}	

	printf("\n Enter Max Data : ");
	for(i=0;i<pr;i++)
	{
		printf("\n P%d :",i);
		for(j=0;j<rs;j++)
		{
			printf("\n %c : ",65+j);
			scanf("%d",&max[i][j]);
		}
	}
	
	// for Need 
	for(i=0;i<pr;i++)
	{
		printf("\n");
		for(j=0;j<rs;j++)
		{
			need[i][j] = max[i][j] - allocation[i][j];
		}
	}
	
	printf("\n Enter Available Resources : ");
	for(j=0;j<rs;j++)
	{
		printf("\n %c : ",65+j);
		scanf("%d",&available[j]);
	}

	y=0;
	for(k=0;k<pr && y!=pr;k++)
	{
		for (i=0;i<pr;i++) 
		{
			cnt=0;
			
			for(j=0;j<rs;j++) 
			{
				if(need[i][j]<=available[j])
				{
				 	cnt++;
				}
			}
			
			if(cnt==rs) 
			{
				safe_state[y++]=i;
				
				for(j=0;j<rs;j++)
				{
					available[j]=available[j] + allocated[j];
					need[i][j] = 9999;
				}
			} 
		}
	}
				
	if(y==pr)
	{
		printf("\n System is in Safe State : ");
		for(i=0;i<pr;i++)
		{
			printf(" P%d ",safe_state[i]);
		}
	}
	else
	{
		printf("\n System is not in Safe State");
	}
	
	return 0;
}
//Q2
// FCFS disk scheduling

#include<stdio.h>

int main()
{
    int RQ[100],i,n,TotalHeadMoment=0,initial;

    printf("\n Enter the number of Requests : ");
    scanf("%d",&n);

    printf("\n Enter the Requests sequence : ");
    for(i=0;i<n;i++)
    {
	    scanf("%d",&RQ[i]);
	}
	
	printf("\n Enter initial head position : ");
    scanf("%d",&initial);
    
    for(i=0;i<n;i++)
    {
        TotalHeadMoment=TotalHeadMoment+abs(RQ[i]-initial);
        initial=RQ[i];
    }
    
    printf("\n Total head moment is %d",TotalHeadMoment);

    return 0;   
}


